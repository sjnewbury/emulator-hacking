From aec8b1e375043e9cd1d4af5ae138405f2a667454 Mon Sep 17 00:00:00 2001
From: Weiyi Wang <wwylele@gmail.com>
Date: Mon, 5 Nov 2018 10:38:35 -0500
Subject: [PATCH 04/23] SVC: use context and generic templates

---
 src/core/arm/dynarmic/arm_dynarmic.cpp | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/src/core/arm/dynarmic/arm_dynarmic.cpp b/src/core/arm/dynarmic/arm_dynarmic.cpp
index e3965f2fe..61733c7ee 100644
--- a/src/core/arm/dynarmic/arm_dynarmic.cpp
+++ b/src/core/arm/dynarmic/arm_dynarmic.cpp
@@ -72,7 +72,7 @@ private:
 class DynarmicUserCallbacks final : public Dynarmic::A32::UserCallbacks {
 public:
     explicit DynarmicUserCallbacks(ARM_Dynarmic& parent)
-        : parent(parent), timing(parent.system.CoreTiming()) {}
+        : parent(parent), timing(parent.system.CoreTiming()), svc_context(parent.system) {}
     ~DynarmicUserCallbacks() = default;
 
     std::uint8_t MemoryRead8(VAddr vaddr) override {
@@ -123,7 +123,7 @@ public:
     }
 
     void CallSVC(std::uint32_t swi) override {
-        Kernel::CallSVC(swi);
+        svc_context.CallSVC(swi);
     }
 
     void ExceptionRaised(VAddr pc, Dynarmic::A32::Exception exception) override {
@@ -158,6 +158,7 @@ public:
 
     ARM_Dynarmic& parent;
     Core::Timing& timing;
+    Kernel::SVC svc_context;
 };
 
 ARM_Dynarmic::ARM_Dynarmic(Core::System& system, PrivilegeMode initial_mode)
-- 
2.33.0

