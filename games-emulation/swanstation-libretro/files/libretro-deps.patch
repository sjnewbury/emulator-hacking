--- ./src/updater/CMakeLists.txt~	2020-11-06 10:22:07.000000000 +0000
+++ ./src/updater/CMakeLists.txt	2020-11-06 10:40:07.478297307 +0000
@@ -3,7 +3,8 @@
   updater.h
 )
 
-target_link_libraries(updater PRIVATE common minizip zlib)
+target_link_libraries(updater PRIVATE common)
+target_link_libraries(updater PUBLIC ${MINIZIP_LIBRARIES} ${ZLIB_LIBRARIES})
 
 if(WIN32)
   target_sources(updater PRIVATE
--- ./src/scmversion/CMakeLists.txt~	2020-11-06 12:25:01.000000000 +0000
+++ ./src/scmversion/CMakeLists.txt	2020-11-06 12:26:31.087037972 +0000
@@ -8,7 +8,7 @@
                      COMMAND "${CMAKE_CURRENT_SOURCE_DIR}/gen_scmversion.sh")
 endif()
 
-add_library(scmversion
+add_library(scmversion STATIC
   scmversion.cpp
   scmversion.h
 )
--- ./dep/stb/CMakeLists.txt~	2020-11-06 12:25:01.000000000 +0000
+++ ./dep/stb/CMakeLists.txt	2020-11-06 12:27:53.618788624 +0000
@@ -7,7 +7,7 @@
   src/stb_image_write.c
 )
 
-add_library(stb ${SRCS})
+add_library(stb STATIC ${SRCS})
 target_include_directories(stb PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/include" "${CMAKE_CURRENT_SOURCE_DIR}/src")
 target_include_directories(stb INTERFACE "${CMAKE_CURRENT_SOURCE_DIR}/include")
 target_link_libraries(stb Threads::Threads "${CMAKE_DL_LIBS}")
--- ./dep/glad/CMakeLists.txt~	2020-11-06 12:25:01.000000000 +0000
+++ ./dep/glad/CMakeLists.txt	2020-11-06 12:28:37.716390666 +0000
@@ -6,7 +6,7 @@
 if(APPLE)
   add_library(glad OBJECT ${SRCS})
 else()
-  add_library(glad ${SRCS})
+  add_library(glad STATIC ${SRCS})
 endif()
 
 target_include_directories(glad PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/include")
--- ./dep/vulkan-loader/CMakeLists.txt~	2020-11-06 12:25:01.000000000 +0000
+++ ./dep/vulkan-loader/CMakeLists.txt	2020-11-06 12:29:19.853951133 +0000
@@ -22,7 +22,7 @@
 	src/vulkan_loader.cpp
 )
 
-add_library(vulkan-loader ${SRCS})
+add_library(vulkan-loader STATIC ${SRCS})
 target_include_directories(vulkan-loader PUBLIC  "${CMAKE_CURRENT_SOURCE_DIR}/include")
 target_link_libraries(vulkan-loader PRIVATE ${CMAKE_DL_LIBS})
 
--- ./dep/lzma/CMakeLists.txt~	2020-11-06 12:43:49.000000000 +0000
+++ ./dep/lzma/CMakeLists.txt	2020-11-06 13:18:36.536667363 +0000
@@ -1,4 +1,4 @@
-add_library(lzma
+add_library(lzma STATIC
   include/7zTypes.h
   include/Alloc.h
   include/Bra.h
--- ./dep/glslang/CMakeLists.txt~	2020-11-06 13:25:53.000000000 +0000
+++ ./dep/glslang/CMakeLists.txt	2020-11-06 13:26:11.122976597 +0000
@@ -43,7 +43,7 @@
 	StandAlone/resource_limits_c.cpp
 )
 
-add_library(glslang ${SRCS})
+add_library(glslang STATIC ${SRCS})
 
 if(WIN32)
   target_sources(glslang PRIVATE glslang/OSDependent/Windows/ossource.cpp)
--- ./dep/libchdr/CMakeLists.txt.orig	2020-12-23 11:00:48.269487702 +0000
+++ ./dep/libchdr/CMakeLists.txt	2020-12-23 11:03:23.346102614 +0000
@@ -1,4 +1,4 @@
-add_library(libchdr
+add_library(libchdr STATIC
   include/libchdr/bitstream.h
   include/libchdr/cdrom.h
   include/libchdr/chd.h
@@ -13,6 +13,6 @@
   src/libchdr_huffman.c
 )
 
-target_include_directories(libchdr PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/include")
-target_link_libraries(libchdr PRIVATE zlib lzma libFLAC)
+target_include_directories(libchdr PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/include" ${ZLIB_INCLUDE_DIRS} ${LIBFLAC_INCLUDE_DIRS})
+target_link_libraries(libchdr PRIVATE ${ZLIB_LIBRARIES} lzma ${LIBFLAC_LIBRARIES})
 
--- ./dep/discord-rpc/CMakeLists.txt~	2021-01-17 13:35:57.000000000 +0000
+++ ./dep/discord-rpc/CMakeLists.txt	2021-01-17 13:39:52.633748179 +0000
@@ -12,8 +12,8 @@
 )
 
 add_library(discord-rpc ${SRCS})
-target_include_directories(discord-rpc PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/include")
-target_link_libraries(discord-rpc rapidjson)
+target_include_directories(discord-rpc PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/include" ${RAPIDJSON_INCLUDE_DIRS})
+target_link_libraries(discord-rpc ${RAPIDJSON_LIBRARIES})
 
 if(WIN32)
   target_sources(discord-rpc PRIVATE
--- ./dep/CMakeLists.txt.orig	2021-08-04 09:06:43.814660385 +0100
+++ ./dep/CMakeLists.txt	2021-08-04 09:28:10.645512582 +0100
@@ -1,26 +1,29 @@
+find_package(PkgConfig REQUIRED)
+
 add_subdirectory(glad)
 add_subdirectory(stb)
-add_subdirectory(zlib)
-add_subdirectory(minizip)
 add_subdirectory(lzma)
-add_subdirectory(libFLAC)
 add_subdirectory(libchdr)
-add_subdirectory(xxhash)
-add_subdirectory(rapidjson)
 add_subdirectory(glslang)
 add_subdirectory(vulkan-loader)
 add_subdirectory(imgui)
 add_subdirectory(simpleini)
 
+pkg_check_modules(ZLIB REQUIRED zlib)
+pkg_check_modules(MINIZIP REQUIRED minizip)
+pkg_check_modules(LIBFLAC REQUIRED flac)
+pkg_check_modules(XXHASH REQUIRED libxxhash)
+pkg_check_modules(RAPIDJSON REQUIRED RapidJSON)
+
 set(LIBSAMPLERATE_ENABLE_SINC_BEST_CONVERTER OFF)
-add_subdirectory(libsamplerate)
+pkg_check_modules(SAMPLERATE REQUIRED samplerate)
 
-add_subdirectory(tinyxml2)
+pkg_check_modules(TINYXML2 REQUIRED tinyxml2)
 add_subdirectory(cubeb)
 add_subdirectory(googletest)
 
 if(ENABLE_DISCORD_PRESENCE)
   add_subdirectory(discord-rpc)
 endif()
 
 if(ENABLE_CHEEVOS)
--- ./src/common/CMakeLists.txt.orig	2021-08-04 09:06:43.834660755 +0100
+++ ./src/common/CMakeLists.txt	2021-08-04 09:17:01.818336718 +0100
@@ -1,4 +1,4 @@
-add_library(common
+add_library(common STATIC
   align.h
   assert.cpp
   assert.h
@@ -116,9 +116,9 @@
   window_info.h
 )
 
-target_include_directories(common PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/..")
+target_include_directories(common PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/.." ${ZLIB_INCLUDE_DIRS} ${MINIZIP_INCLUDE_DIRS} ${SAMPLERATE_INCLUDE_DIRS})
 target_include_directories(common PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/..")
-target_link_libraries(common PRIVATE glad stb Threads::Threads libchdr glslang vulkan-loader zlib minizip samplerate)
+target_link_libraries(common PRIVATE glad stb Threads::Threads libchdr glslang vulkan-loader ${ZLIB_LIBRARIES} ${MINIZIP_LIBRARIES} ${SAMPLERATE_LIBRARIES})
 
 if(WIN32)
   target_sources(common PRIVATE
--- ./src/core/CMakeLists.txt.orig	2021-08-04 09:07:33.025591896 +0100
+++ ./src/core/CMakeLists.txt	2021-08-04 09:24:24.432910366 +0100
@@ -115,9 +115,9 @@
 )
 
 target_include_directories(core PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/..")
-target_include_directories(core PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/..")
-target_link_libraries(core PUBLIC Threads::Threads common zlib vulkan-loader)
-target_link_libraries(core PRIVATE glad stb xxhash imgui)
+target_include_directories(core PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/.." ${ZLIB_INCLUDE_DIRS} ${XXHASH_INCLUDE_DIRS})
+target_link_libraries(core PUBLIC Threads::Threads common ${ZLIB_LIBRARIES} ${XXHASH_LIBRARIES} vulkan-loader)
+target_link_libraries(core PRIVATE glad stb imgui)
 target_compile_definitions(core PUBLIC "-DWITH_IMGUI=1")
 
 if(WIN32)
--- ./src/frontend-common/CMakeLists.txt.orig	2021-08-04 09:07:33.025591896 +0100
+++ ./src/frontend-common/CMakeLists.txt	2021-08-04 09:30:31.742585677 +0100
@@ -1,4 +1,4 @@
-add_library(frontend-common
+add_library(frontend-common STATIC
   common_host_interface.cpp
   common_host_interface.h
   controller_interface.cpp
@@ -45,7 +45,7 @@
   vulkan_host_display.h
 )
 
-target_link_libraries(frontend-common PUBLIC core common glad vulkan-loader cubeb imgui simpleini tinyxml2 rapidjson scmversion)
+target_link_libraries(frontend-common PUBLIC core common glad vulkan-loader cubeb imgui simpleini ${TINYXML2_LIBRARIES} ${RAPIDJSON_LIBRARIES} scmversion)
 
 if(WIN32)
   target_sources(frontend-common PRIVATE
@@ -137,7 +137,7 @@
     cheevos.h
   )
   target_compile_definitions(frontend-common PUBLIC -DWITH_CHEEVOS=1)
-  target_link_libraries(frontend-common PRIVATE rcheevos rapidjson)
+  target_link_libraries(frontend-common PRIVATE rcheevos ${RAPIDJSON_LIBRARIES)
 endif()
 
 # Copy the provided data directory to the output directory.
--- ./dep/stb/CMakeLists.txt~	2021-08-04 09:47:03.000000000 +0100
+++ ./dep/stb/CMakeLists.txt	2021-08-04 09:57:08.734132898 +0100
@@ -10,4 +10,4 @@
 add_library(stb STATIC ${SRCS})
 target_include_directories(stb PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/include" "${CMAKE_CURRENT_SOURCE_DIR}/src")
 target_include_directories(stb INTERFACE "${CMAKE_CURRENT_SOURCE_DIR}/include")
-target_link_libraries(stb zlib Threads::Threads "${CMAKE_DL_LIBS}")
+target_link_libraries(stb ${ZLIB_LIBRARIES} Threads::Threads "${CMAKE_DL_LIBS}")
